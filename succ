#!/bin/bash

# Initial vars
export LC_ALL=C
PDSERVER="https://sia.pixeldrain.com"
TASKS=$2

bshelp() {
    cat <<EOF
BuildSuccer 3.0 by MattRoot

Usage:
    $0 <config> <tasks> [options]
    
<config> - specify a config file to use in a build session.
You can find example config file on MattRoot's GitHub.

<tasks> - specify which tasks should be executed in a build session.
Note that at least one task must be defined.
IMPORTANT: Tasks will be executed in order exact to the way you specified in the argument.

Available tasks:
    
    m   -   Install components required for building (Ubuntu and Debian only)
    i   -   Init repository.
    s   -   Sync repository.
    b   -   Build ROM from source. If build succeeds, it will also be deployed to Telegram, if specified so in config file.
    c   -   Clean build directory.
    
[options] - optional flags to change BuildSuccer behavior.

Available flags:

    p   -   Skip deployment. Notice that even with this flag enabled, CI channel would still be functioning, but will not post the final build.
    
Examples:

    $0 "~/xenon.suc" isb
    $0 "~/paosp.suc" scb p
    $0 "~/dummy.suc" m
    
EOF
}

if [ "$#" -le 1 ];then
    echo "ERROR: Invalid syntax."
	bshelp
	exit 2
fi

if [ ! -r $1 ];then
    echo "ERROR: Config file $1 does not exist."
    exit 2
else
    source $1
fi

init() {
    repo init -u $BS_MANIFEST_REPO -b $BS_MANIFEST_BRANCH
    mkdir .repo/local_manifests
    if [ $BS_LOCAL_MANIFEST_USE ] && [ $BS_LOCAL_MANIFEST_GIT ];then
        git clone $BS_LOCAL_MANIFEST_REPO -b $BS_LOCAL_MANIFEST_BRANCH
    elif [ $BS_LOCAL_MANIFEST_USE ] && [ $BS_LOCAL_MANIFEST_CP ];then
        cp $BS_LOCAL_MANIFEST_PATH .repo/local_manifests/RoomService.xml
    fi
}

recc() {
    broadcast_jobstart sync
    repo sync --force-sync -c -f -j64 --no-clone-bundle --no-tags
    broadcast_jobfinish
}

cle() {
    source build/envsetup.sh
    make clobber
    make clean
    tgsend_ci "*$(pwd) cleaned.*"
}

# thanks Lawnchair guys for this
tgsend_ci() {
        curl -F chat_id="$BS_DEPLOY_CI_CHANNEL" -F text="$1" -F parse_mode="markdown" -F disable_web_page_preview="true" https://api.telegram.org/bot$BS_DEPLOY_API_TOKEN/sendMessage
}

tgsend_release() {
        curl -F chat_id="$BS_DEPLOY_RELEASE_CHANNEL" -F text="$1" -F parse_mode="markdown" -F disable_web_page_preview="true" https://api.telegram.org/bot$BS_DEPLOY_API_TOKEN/sendMessage
}

# Thanks @artur9010 for this
pdup() {
    for FILE in "$@"
    do
        FILENAME="${FILE##*/}"
        RESPONSE=$(curl -# -F "fileName=$FILENAME" -F "file=@$FILE" $PDSERVER/api/file)
        FILEID=$(echo $RESPONSE | grep -Po '(?<="id":")[^"]*')
        export PDUP_PRODUCT="$PDSERVER/api/file/$FILEID"
    done
    echo "" # Move cursor down because yes
}

broadcast_generate() {
    export BROADCAST="*New $BS_DEPLOY_DISPLAY_NAME release available!*

📱 Device: $BS_DEPLOY_DISPLAY_DEVICE
🔃 Android version: $PLATFORM_VERSION_
🆔 PAOSP version: _$BS_DEPLOY_DISPLAY_VERSION_
📆 Build date: $(date +%Y-%m-%d)
ℹ️ Build type: $BS_PACKAGE_TYPE
👤 Maintainer: $BS_DEPLOY_DISPLAY_MAINTAINER

*Download:* _Not implemented_
*MD5:* _Not implemented_"
}
 
broadcast_jobstart() {
    tgsend_ci "*BuildSuccer job started.*
Type: `_$1_`
Target: `$BS_BUILD_TARGET`
Host: _$(whoami)@$(hostname)
Path: _$(pwd)_
Time: _$(date)_"
}

broadcast_jobfinish() {
    tgsend_ci "*Job finished* at $(date)"
}

build() {
    broadcast_jobstart build
    source build/envsetup.sh
    if [ $BS_BUILD_BRUNCH ];then
        brunch $BS_BUILD_TARGET
    else
        lunch $BS_BUILD_TARGET
        make -j$(nproc) $BS_BUILD_MAKE
    fi
    
    predeploy
    
    cd $OUT
    pdup $BS_PACKAGE_NAME.zip
    ZIP=$PDUP_PRODUCT
    pdup $BS_PACKAGE_NAME.zip.md5sum
    MD5=$PDUP_PRODUCT
    
    broadcast_generate
    tgsend_ci "$BROADCAST"
    tgsend_release "$BROADCAST"
    broadcast_jobfinish
}


for (( i=0; i<${#TASKS}; i++ )); do
    if [ "${TASKS:$i:1}" = "i" ];then
        init
    elif [ "${TASKS:$i:1}" = "s" ];then
        recc
    elif [ "${TASKS:$i:1}" = "b" ];then
        build
    elif [ "${TASKS:$i:1}" = "c" ];then
        cle
    fi
done
